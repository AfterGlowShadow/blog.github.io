<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>余晖残影</title>
  
  <subtitle>秋风扫落叶 余晖映残影</subtitle>
  <link href="/blog.github.io/atom.xml" rel="self"/>
  
  <link href="http://afterglowshadow.github.io/blog.github.io/"/>
  <updated>2021-07-23T11:25:48.418Z</updated>
  <id>http://afterglowshadow.github.io/blog.github.io/</id>
  
  <author>
    <name>Shadow</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php常用代码段</title>
    <link href="http://afterglowshadow.github.io/blog.github.io/2021/07/23/phpnote/"/>
    <id>http://afterglowshadow.github.io/blog.github.io/2021/07/23/phpnote/</id>
    <published>2021-07-23T11:25:48.418Z</published>
    <updated>2021-07-23T11:25:48.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PHP常用代码段记录"><a href="#PHP常用代码段记录" class="headerlink" title="PHP常用代码段记录"></a>PHP常用代码段记录</h2><h3 id="url封装请求-包含post-get等格式"><a href="#url封装请求-包含post-get等格式" class="headerlink" title="url封装请求(包含post,get等格式)"></a>url封装请求(包含post,get等格式)</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">MyCurl</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$method</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'GET'</span><span class="token punctuation">,</span><span class="token variable">$type</span><span class="token operator">=</span><span class="token single-quoted-string string">'json'</span><span class="token punctuation">,</span><span class="token variable">$headers</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">try</span><span class="token punctuation">&#123;</span>        <span class="token comment">//初始化</span>        <span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$headers</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token double-quoted-string string">"cache-control: no-cache"</span><span class="token punctuation">;</span>        <span class="token variable">$contentType</span> <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token single-quoted-string string">'form-data'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token single-quoted-string string">'Content-Type: multipart/form-data'</span><span class="token punctuation">,</span>            <span class="token single-quoted-string string">'json'</span>      <span class="token operator">=</span><span class="token operator">></span> <span class="token single-quoted-string string">'Content-Type: application/json'</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$method</span> <span class="token operator">==</span> <span class="token single-quoted-string string">'GET'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token variable">$querystring</span> <span class="token operator">=</span> <span class="token function">http_build_query</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$url</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'?'</span><span class="token punctuation">.</span><span class="token variable">$querystring</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$headers</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$contentType</span><span class="token punctuation">[</span><span class="token variable">$type</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 请求头，可以传数组</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HTTPHEADER</span><span class="token punctuation">,</span><span class="token variable">$headers</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token boolean constant">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 执行后不直接打印出来</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$method</span> <span class="token operator">==</span> <span class="token single-quoted-string string">'POST'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token operator">==</span><span class="token single-quoted-string string">'json'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_CUSTOMREQUEST</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'POST'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 请求方式</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POST</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">// post提交</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">// post的变量</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$method</span> <span class="token operator">==</span> <span class="token single-quoted-string string">'PUT'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            curl_setopt <span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_CUSTOMREQUEST</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"PUT"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$method</span> <span class="token operator">==</span> <span class="token single-quoted-string string">'DELETE'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            curl_setopt <span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_CUSTOMREQUEST</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"DELETE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_TIMEOUT</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 最大执行时间</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HTTP_VERSION</span><span class="token punctuation">,</span> <span class="token constant">CURL_HTTP_VERSION_1_1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 最大执行时间</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSL_VERIFYPEER</span><span class="token punctuation">,</span> <span class="token boolean constant">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 跳过证书检查</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSL_VERIFYHOST</span><span class="token punctuation">,</span> <span class="token boolean constant">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不从证书中检查SSL加密算法是否存在</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSLVERSION</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        curl_setopt($ch, CURLOPT_SSL_CIPHER_LIST, 'SSLv3');</span>        <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//执行并获取HTML文档内容</span>        <span class="token variable">$err</span> <span class="token operator">=</span> <span class="token function">curl_error</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$err</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">;</span>            <span class="token keyword">exit</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//释放curl句柄</span>        <span class="token keyword">return</span> <span class="token variable">$output</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span>\<span class="token package">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="base64图片转文件"><a href="#base64图片转文件" class="headerlink" title="base64图片转文件"></a>base64图片转文件</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">base64_img</span><span class="token punctuation">(</span><span class="token variable">$base64url</span><span class="token punctuation">,</span><span class="token variable">$bool</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//匹配出图片的格式</span>    <span class="token variable">$base64url</span> <span class="token operator">=</span> str_replace <span class="token punctuation">(</span><span class="token single-quoted-string string">' '</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">'+'</span> <span class="token punctuation">,</span> <span class="token variable">$base64url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> preg_match <span class="token punctuation">(</span><span class="token single-quoted-string string">'/^(data:\s*image\/(\w+);base64,)/'</span> <span class="token punctuation">,</span> <span class="token variable">$base64url</span> <span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$type</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token punctuation">[</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$new_file</span> <span class="token operator">=</span> <span class="token constant">ROOT_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'public'</span> <span class="token punctuation">.</span> <span class="token constant">DS</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'uploads/face/'</span> <span class="token punctuation">.</span> date <span class="token punctuation">(</span><span class="token single-quoted-string string">'Ymd'</span> <span class="token punctuation">,</span> time <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"/"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>file_exists <span class="token punctuation">(</span><span class="token variable">$new_file</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//检查是否有该文件夹，如果没有就创建，并给予最高权限</span>            mkdir <span class="token punctuation">(</span><span class="token variable">$new_file</span> <span class="token punctuation">,</span> <span class="token number">0700</span><span class="token punctuation">,</span><span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$new</span> <span class="token operator">=</span> md5 <span class="token punctuation">(</span>time <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$new_file</span> <span class="token operator">=</span> <span class="token variable">$new_file</span> <span class="token punctuation">.</span> <span class="token variable">$new</span> <span class="token class-name"><span class="token punctuation">.</span></span> <span class="token double-quoted-string string">".<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$type</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> file_put_contents <span class="token punctuation">(</span><span class="token variable">$new_file</span> <span class="token punctuation">,</span> base64_decode <span class="token punctuation">(</span>str_replace <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">[</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span> <span class="token punctuation">,</span> <span class="token variable">$base64url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//压缩图片</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$bool</span> <span class="token operator">==</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                image_png_size_add <span class="token punctuation">(</span><span class="token variable">$new_file</span> <span class="token punctuation">,</span> <span class="token variable">$new_file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//删除未压缩前图片</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token function">http_type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$file_name</span> <span class="token operator">=</span>  <span class="token double-quoted-string string">"/uploads/face/"</span> <span class="token punctuation">.</span> date <span class="token punctuation">(</span><span class="token single-quoted-string string">'Ymd'</span> <span class="token punctuation">,</span> time <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"/"</span> <span class="token punctuation">.</span> <span class="token variable">$new</span> <span class="token class-name"><span class="token punctuation">.</span></span> <span class="token double-quoted-string string">".<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$type</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">'code'</span><span class="token operator">=</span><span class="token operator">></span><span class="token number">200</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'msg'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$file_name</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">'code'</span><span class="token operator">=</span><span class="token operator">></span><span class="token number">100</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'msg'</span><span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'图片不是base64格式！'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">/** * 对查询结果集进行排序,支持多维数组 * @param array $list 查询结果 * @param string $field 排序的字段名 * @param array $sortby 排序类型 * asc正向排序 desc逆向排序 nat自然排序 * @return array */</span><span class="token keyword">function</span> <span class="token function">list_sort</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span><span class="token variable">$field</span><span class="token punctuation">,</span> <span class="token variable">$sortby</span><span class="token operator">=</span><span class="token single-quoted-string string">'asc'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$refer</span> <span class="token operator">=</span> <span class="token variable">$resultSet</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$list</span> <span class="token keyword">as</span> <span class="token variable">$i</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$data</span><span class="token punctuation">)</span>            <span class="token variable">$refer</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$field</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$sortby</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token single-quoted-string string">'asc'</span><span class="token punctuation">:</span> <span class="token comment">// 正向排序</span>                <span class="token function">asort</span><span class="token punctuation">(</span><span class="token variable">$refer</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token single-quoted-string string">'desc'</span><span class="token punctuation">:</span><span class="token comment">// 逆向排序</span>                <span class="token function">arsort</span><span class="token punctuation">(</span><span class="token variable">$refer</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token single-quoted-string string">'nat'</span><span class="token punctuation">:</span> <span class="token comment">// 自然排序</span>                <span class="token function">natcasesort</span><span class="token punctuation">(</span><span class="token variable">$refer</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span> <span class="token variable">$refer</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$val</span><span class="token punctuation">)</span>            <span class="token variable">$resultSet</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token variable">$list</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$resultSet</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      PHP常用代码段记录
    
    </summary>
    
    
      <category term="语言" scheme="http://afterglowshadow.github.io/blog.github.io/categories/%E8%AF%AD%E8%A8%80/"/>
    
      <category term="php" scheme="http://afterglowshadow.github.io/blog.github.io/categories/%E8%AF%AD%E8%A8%80/php/"/>
    
    
      <category term="php" scheme="http://afterglowshadow.github.io/blog.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>vim跳转命令</title>
    <link href="http://afterglowshadow.github.io/blog.github.io/2021/07/23/vimjumpcommand/"/>
    <id>http://afterglowshadow.github.io/blog.github.io/2021/07/23/vimjumpcommand/</id>
    <published>2021-07-23T11:25:48.418Z</published>
    <updated>2021-07-23T11:25:48.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规移动-上下左右"><a href="#常规移动-上下左右" class="headerlink" title="常规移动[上下左右]"></a>常规移动[上下左右]</h2><p>hjkl 这是代替箭头键功能的<br>H M L 跳到屏幕的顶上 中间 下方</p><p>w 跳到下一个单词的开始<br>e 跳到单词的结束<br>b 向后跳</p><p>gg 跳到文件的开始<br>G 跳到文件的结束<br>10gg 或10G 跳到第10行</p><p>另外看文件时 除了pageup pagedown外还有其它的快速键<br>如CTRL-F 向前一页 CTRL-B 向后一页</p><p>CTRL-D 向下半页 CTRL-U 向上半页我觉得更实用 这样看文章时就不会跳转出错<br>另外还有<br>CTRL-E 向下一行<br>CTRL-Y 向上一行</p><p>^ 行首<br>$行尾<br>0 第一个字符</p><p>另外还有ctrl-t ctrl-i ctrl-]<br>如果已经使用了ctags 或是cscope创建索引文件的话 那看代码时很是方便[ctags需要单独设置,在使用前必须检索一遍才能用]</p><p>跳转到函数、变量定义处：[ctags]<br>[+ctrl+i 跳转到函数、变量和#define<br>[+ctrl+d 跳转到#define处<br>ctrl+i 向前跳到前几次光标位置<br>ctrl+o 向后跳到后几次光标位置</p><p>函数体跳转：<br>[[<br>]]<br>[]<br>][<br>{}</p><details>  <summary>函数体示例</summary>    如何选中括号中的内容 进行：<pre><code>将光标移至括号内，按shift+v进入行选模式，然后i｛ － 选小括号中内容，不包括小括号a｛ － 选小括号中内容，包括小括号ib － 选中括号中内容，不包括括号ab － 选中括号中内容，包括括号i｛ － 选大括号中内容，不包括大括号a｛ － 选大括号中内容，包括大括号</code></pre></details><p>下面还有些相关的tips，未全部验证：<br>vi{ 选中{}中间的内容,不包括{}<br>va{ 选中{}中间内容，包括{}<br>vi( 选中()中间内容<br>vi&lt; 选中&lt;&gt;中间内容<br>vi[ 选中[]中间内容<br>vit 选中中间的内容<br>vi” 选中””中间内容<br>vi’ 选中”中间的内容<br>vis 选中一个句子<br>vib 选中一个block<br>viw选中一个单词<br>vip 选中一个段落</p><p>gg光标定位到第一行开头，G定位到最后一行开头<br>H光标跳到当前窗口显示文本的第一行<br>M光标跳到当前窗口显示文本的中间一行<br>L光标跳到当前窗口显示文本的最后一行<br>g*查找包含当前单词的所有单词(*只查找与当前单词精确匹配的单词)，<br>-d光标下跳半屏，文本上滚半屏<br>-u光标上跳半屏，文本下滚半屏<br>-e文本向上滚动一行<br>zz屏幕滚动使得当前行成为屏幕的中间一行</p><ul><li>跳到下一个不同之处<br>:]c</li></ul><p>*跳到上一个不同之处<br>:[c</p><p>*不论何种情况下－o都可以上一次跳转的地方</p><p>*查看变量和函数的申明<br>[i</p><h2 id="查找并跳转"><a href="#查找并跳转" class="headerlink" title="查找并跳转"></a>查找并跳转</h2><p>ta 跳到下一个a 前面<br>fa 跳到下一个a<br>大写的意思相反</p><p>另外上面也作为vim其它命令的定位符 如删除d<br>dt)<br>一直删除到这行的)</p><p>另外还有%(跳到文件的%多少) 和|(跳到第几列) 不过我很少用</p><h2 id="vim文件跳转"><a href="#vim文件跳转" class="headerlink" title="vim文件跳转"></a>vim文件跳转</h2><p>如果使用vim 打开了多个文件 ，如vim file1 file2 … fileN<br>可以通过<br>:n 或 :prev来跳转 到前一个或者后一个文件<br>还可以通过<br>:first或:last来跳转到第一个和最后一个文件</p><p>如果你只打开一个文件，如vim file1<br>然后在使用过程中，通过<br>:e file2编辑了第二个文件，这时, :prev是不起作用的<br>可以用<br>:e#返回上一个编辑的文件</p><p>无论哪两种方式都可以用<br>:bN跳转到打开的第N个文件<br>如:b1跳转到第一个打开的文件</p><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><p>在normal模式下光标停在某个字符上ga可以查看该字符的ascii码<br>#复制删除粘贴的操作：按V（shift+v），进入可视模式，jk上下选择需要的行，然后按<br>y 复制<br>d 删除<br>x 剪切<br>p 粘贴<br>可视模式很好用，例如想把两行的所有单词变成小写，按V然后按j或k选中这两行，按gu即可<br>#折叠或展开（在折叠的那一行左右移动光标也可展开折叠）<br>#删除光标所在行所处的范围的折叠<br>#展开折叠:zo<br>#折叠:zc<br>#不在单词中间断行。 设置了这个选项后， 如果一行文字非常长， 无法在一行内显示完的话，<br>它会在单词与单词间的空白处断开， 尽量不会把一个单词分成两截放在两个不同的行里。<br>set lbr<br>#sw是shiftwidth的缩写，表缩进列数<br>fx把光标移动到该行的下个x字符上，这个x也可以是一个汉字，;重复fx操作。Fx把光标移动到该行的上一个x字符上。</p><p>normal模式下按J删除此行末尾的换行符,从而合并两行<br>:ab myname william_djj<br>以后再编辑时键入myname，然后空格或回车myname串就会被william_djj代替<br>:r !date<br>在当前位置插入系统时间（linux下的date命令），同理当前位置插入某文件的内容就是<br>:r filename<br>:set ignorecase<br>查找时取消case sensitive<br>:set noignorecase<br>查找时case sensitive<br>############ 使用tags ###################<br>以下命令递归当前目录下的所有文件创建tags文件<br>ctags -R .<br>vim打开当前目录下的任意一文件，命令模式下键入下面语句以指定刚才创建的tags的位置，以后就可以在不同文件间查阅函数<br>set tags=..\tags<br>#分割窗口显示当前函数的定义<br>-w ]<br>##########################################<br>如果插件目录下有echofunc.vim，用以下命令生成tags，以后编辑代码函数名后打“（“时有参数提示。<br>$ ctags -R –fields=+lS .<br>:Tlist打开左边一个taglist的窗口，显示symbols。要注意的是在windows下如果tags文件路径中有空格或中文会报找不到tags文件的错误,<br>+w+w 或者+w+left/right 窗口切换<br>+] 进入光标所指的symbol的定义（如果用鼠标也是+鼠标左键，跟SI的用法一样）<br>+t 返回第一个用+t 跳转位置,注意+o是跳回上一个视图，而+t是跳回上一次按+]的位置<br>#以下命令分裂出一个窗口显示定义处<br>ptag 函数名<br>#以下命令关闭刚才打开的分裂窗口<br>pclose</p><p>#垂直分裂窗口打开一文件<br>vsplit 文件名</p><p>#水平分裂窗口打开一文件<br>split 文件名<br>变量名写成\name表示匹配模式<br>停在某个括号上按%，跳到匹配的括号处，#if跳到匹配的#else或#endif处<br>set fdm=syntax折叠函数体<br>双击]往后逐个函数跳读，双击[往前逐个函数跳读</p><p>#解决乱码<br>set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1</p><p>#在vim下对比两个文件,原来打开了fnpro.c,现在和fnpro.c.bak对比</p><p>#垂直分割<br>:vert diffsplit fnpro.c.bak</p><p>#水平分割<br>:diffsplit fnpro.c.bak</p><p>#重新对文件代码进行缩进<br>gg=G</p><p>. 相对行号<br>:set relativenumber</p>]]></content>
    
    <summary type="html">
    
      vim文件内常用跳转命令
    
    </summary>
    
    
      <category term="工具" scheme="http://afterglowshadow.github.io/blog.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="vim" scheme="http://afterglowshadow.github.io/blog.github.io/categories/%E5%B7%A5%E5%85%B7/vim/"/>
    
    
      <category term="vim" scheme="http://afterglowshadow.github.io/blog.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>archapp.md</title>
    <link href="http://afterglowshadow.github.io/blog.github.io/2021/07/23/archapp-md/"/>
    <id>http://afterglowshadow.github.io/blog.github.io/2021/07/23/archapp-md/</id>
    <published>2021-07-23T03:45:33.000Z</published>
    <updated>2021-07-23T14:01:48.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h2><h3 id="微信（用的深度的）"><a href="#微信（用的深度的）" class="headerlink" title="微信（用的深度的）"></a>微信（用的深度的）</h3><ol><li>先修改系统配置（按照lib包用）<br>打开 /etc/pacman.conf文件中的multilib的注释</li><li>先安装深度的wine<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo pacman -S deepin-wineyay -S deepin-wine<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>安装深度wechat<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yay -S com.qq.weixin.spark<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>安装tim<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yay -S com.qq.tim.spark<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      arch 常用应用
    
    </summary>
    
    
      <category term="系统" scheme="http://afterglowshadow.github.io/blog.github.io/categories/%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="linux" scheme="http://afterglowshadow.github.io/blog.github.io/categories/%E7%B3%BB%E7%BB%9F/linux/"/>
    
    
      <category term="系统" scheme="http://afterglowshadow.github.io/blog.github.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="linux" scheme="http://afterglowshadow.github.io/blog.github.io/tags/linux/"/>
    
      <category term="windows" scheme="http://afterglowshadow.github.io/blog.github.io/tags/windows/"/>
    
  </entry>
  
</feed>
